{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Link from 'next/link';\nimport { connect } from 'react-redux';\nimport Counter from './counter';\nimport Clock from './clock';\n\nfunction Page({\n  error,\n  lastUpdate,\n  light,\n  linkTo,\n  NavigateTo,\n  placeholderData,\n  title\n}) {\n  return __jsx(\"div\", null, __jsx(\"h1\", null, title), __jsx(Clock, {\n    lastUpdate: lastUpdate,\n    light: light\n  }), __jsx(Counter, null), __jsx(\"nav\", null, __jsx(Link, {\n    href: linkTo\n  }, __jsx(\"a\", null, \"Navigate: \", NavigateTo))), placeholderData && __jsx(\"pre\", null, __jsx(\"code\", null, JSON.stringify(placeholderData, null, 2))), error && __jsx(\"p\", {\n    style: {\n      color: 'red'\n    }\n  }, \"Error: \", error.message));\n}\n\nfunction mapStateToProps(state) {\n  const {\n    TestReducer = {}\n  } = state;\n  return _objectSpread({}, TestReducer);\n}\n\nexport default connect(mapStateToProps)(Page);","map":null,"metadata":{},"sourceType":"module"}