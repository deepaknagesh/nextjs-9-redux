{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { increment, decrement, reset } from '../redux/tickers/actions';\n\nclass Counter extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"increment\", () => {\n      this.props.dispatch(increment());\n    });\n\n    _defineProperty(this, \"decrement\", () => {\n      this.props.dispatch(decrement());\n    });\n\n    _defineProperty(this, \"reset\", () => {\n      this.props.dispatch(reset());\n    });\n  }\n\n  render() {\n    const {\n      count\n    } = this.props;\n    return __jsx(\"div\", {\n      className: \"jsx-2435724200\"\n    }, __jsx(_JSXStyle, {\n      id: \"2435724200\"\n    }, [\"div.jsx-2435724200{padding:0 0 20px 0;}\"]), __jsx(\"h1\", {\n      className: \"jsx-2435724200\"\n    }, \"Count: \", __jsx(\"span\", {\n      className: \"jsx-2435724200\"\n    }, count)), __jsx(\"button\", {\n      onClick: this.increment,\n      className: \"jsx-2435724200\"\n    }, \"+1\"), __jsx(\"button\", {\n      onClick: this.decrement,\n      className: \"jsx-2435724200\"\n    }, \"-1\"), __jsx(\"button\", {\n      onClick: this.reset,\n      className: \"jsx-2435724200\"\n    }, \"Reset\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const {\n    TestReducer = {}\n  } = state;\n  const {\n    count = 0\n  } = TestReducer;\n  return {\n    count\n  };\n};\n\nexport default connect(mapStateToProps)(Counter);","map":null,"metadata":{},"sourceType":"module"}