{"ast":null,"code":"/* global fetch */\nimport { all, call, delay, put, take, takeLatest } from 'redux-saga/effects'; // import es6promise from 'es6-promise'\n\nimport 'isomorphic-fetch';\nimport { actionTypes, failure, loadDataSuccess, tickClock } from './actions'; // es6promise.polyfill()\n\nfunction* runClockSaga() {\n  yield take(actionTypes.START_CLOCK);\n\n  while (true) {\n    yield put(tickClock(false));\n    yield delay(1000);\n  }\n}\n\nfunction* loadDataSaga() {\n  try {\n    const res = yield fetch('https://jsonplaceholder.typicode.com/users');\n    const data = yield res.json();\n    yield put(loadDataSuccess(data));\n  } catch (err) {\n    yield put(failure(err));\n  }\n}\n\nfunction* rootSaga() {\n  yield all([call(runClockSaga), takeLatest(actionTypes.LOAD_DATA, loadDataSaga)]);\n}\n\nexport default rootSaga;","map":null,"metadata":{},"sourceType":"module"}